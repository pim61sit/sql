<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="farmersmarket.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="7306"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="booth" custom_title="0" dock_id="1" table="4,5:mainbooth"/><dock_state state="000000ff00000000fd0000000100000002000001c30000021ffc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000000001c30000010a00ffffff000001c30000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="booth" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="104"/><column index="2" value="125"/><column index="3" value="300"/><column index="4" value="83"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1*">-- SELECT 

--selecting everything from customer
SELECT * 
FROM customer;

-- add a static value
SELECT 2025 as this_year, 'April' as this_month, customer_id
FROM customer;

-- add an order by + limit
SELECT * 
FROM customer
ORDER BY customer_last_name
LIMIT 10;

--WHERE

SELECT * FROM customer
WHERE customer_id = 1
AND customer_id = 2; 

-- IN
SELECT * From customer_purchases
WHERE customer_id IN (3,4,5) -- only custmoer 3, 4, 5
AND vendor_id IN (3,4,5); 

-- LLIKE
SELECT * FROM product
WHERE product_name LIKE '%pepper%';

-- customers with a last name starting with a
SELECT * FROM customer
WHERE customer_last_name LIKE 'a%';

SELECT * FROM product
WHERE product_size IS NULL
OR product_size = '';

</sql><sql name="SQL 2*">SELECT * 
,CASE WHEN vendor_type = 'Fresh Focused'
	THEN 'Wednesday'
WHEN vendor_type = 'Prepared Foods'
	THEN 'Thursday'
ELSE 'Saturday'
END as day_of_specialty
--pie day, otherwise nothing
,CASE WHEN vendor_name LIKE '%pie%'
	THEN 'Wednesday'
	END as only_pie_day
,CASE WHEN vendor_name = &quot;Annie's Pies&quot;  -- double quote work, but not for all editors!
	THEN 'annie is best'
	END
FROM vendor</sql><sql name="SQL 3*">--DISTINCT

-- Without distinct 4421 rows oof various customer_id
SELECT customer_id FROM customer_purchases;

SELECT DISTINCT customer_id FROM customer_purchases

-- without distinctio, only we/sad 150 tiems OVER
SELECT * 
FROM market_date_info;

-- which vendor has sold product a customer 
SELECT DISTINCT vendor_id
FROM customer_purchases; -- 3 rows, vendor id 7, 8 4

-- which vendor has sold products to a customer 
SELECT DISTINCT vendor_id, product_id
FROM customer_purchases; 

-- which vencor has sold products to a customer and which product was it and to whom it was sold?
SELECT DISTINCT vendor_id, customer_id, product_id
FROM customer_purchases

SELECT * 
,CASE WHEN vendor_type = 'Fresh Focused'
	THEN 'Wednesday'
WHEN vendor_type = 'Prepared Foods'
	THEN 'Thursday'
ELSE 'Saturday'
END as day_of_specialty
--pie day, otherwise nothing
,CASE WHEN vendor_name LIKE '%pie%'
	THEN 'Wednesday'
	END as only_pie_day
,CASE WHEN vendor_name = &quot;Annie's Pies&quot;  -- double quote work, but not for all editors!
	THEN 'annie is best'
	END as annie_is_king
FROM vendor

</sql><sql name="SQL 4*">-- INNER JOIN

-- get prodcut names along customer_purchases
SELECT 
product_name, 
market_date,
customer_id, 
product_id, 
customer_purchases.product_id

FROM customer_purchases
INNER JOIN product
	ON customer_purchases.product_id = product.product_id</sql><sql name="SQL 5*">/* get product names alongside customer_purchases...only products that a customer has purchased will be present */
SELECT 
product_name, -- coming from product
vendor_id, -- coming from cp...below
market_date,
customer_id,
customer_purchases.product_id

FROM customer_purchases
INNER JOIN product
	ON customer_purchases.product_id = product.product_id;
	
/* which vendor has sold products to a customer AND which product was it AND to whom was it sold ? */
SELECT DISTINCT vendor_id, 
product_id, 
--customer_id -- this is dissatisfying...let's have a name!
customer_first_name,
customer_last_name

FROM customer_purchases as cp
INNER JOIN customer as c
	ON cp.customer_id = c.customer_id</sql><sql name="SQL 6*">-- LEFT JOIN

-- there are produts being bought, but not have not?
SELECT
p.product_id, cp.product_id, 
cp.*--all colums in cp TABLE

FROM product p
LEFT JOIN customer_purchases cp
	ON p.product_id = cp.product_id
	
</sql><sql name="SQL 7*">SELECT DISTINCT
p.product_id, product_name, </sql><sql name="SQL 8"></sql><current_tab id="5"/></tab_sql></sqlb_project>
